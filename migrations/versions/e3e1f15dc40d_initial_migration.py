"""Initial migration

Revision ID: e3e1f15dc40d
Revises: 
Create Date: 2022-06-28 17:00:42.317425

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = 'e3e1f15dc40d'
down_revision = 'ce0dbc6f9a8f'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('input_type',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('data_type', sa.String(), nullable=True),
    sa.Column('render_type', sa.String(), nullable=True),
    sa.Column('create_date', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('note',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('value', sa.String(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('ontology_code',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('ontology_url', sa.String(), nullable=True),
    sa.Column('name', sa.String(), nullable=True),
    sa.Column('code', sa.String(), nullable=True),
    sa.Column('value', sa.String(), nullable=True),
    sa.Column('version', sa.String(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('site',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('name', sa.String(), nullable=True),
    sa.Column('code', sa.String(), nullable=True),
    sa.Column('create_date', sa.DateTime(), nullable=True),
    sa.Column('active', sa.Boolean(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('study',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('name', sa.String(), nullable=True),
    sa.Column('code', sa.String(), nullable=True),
    sa.Column('description', sa.String(), nullable=True),
    sa.Column('create_date', sa.DateTime(), nullable=True),
    sa.Column('active', sa.Boolean(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('tag',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('code', sa.String(), nullable=True),
    sa.Column('type', sa.String(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('value',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('code', sa.String(), nullable=True),
    sa.Column('description', sa.String(), nullable=True),
    sa.Column('type', sa.String(), nullable=True),
    sa.Column('value_string', sa.String(), nullable=True),
    sa.Column('unit', sa.String(), nullable=True),
    sa.Column('operator', sa.String(), nullable=True),
    sa.Column('create_date', sa.DateTime(), nullable=True),
    sa.Column('active', sa.Boolean(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('criterion',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('code', sa.String(), nullable=True),
    sa.Column('display_name', sa.String(), nullable=True),
    sa.Column('description', sa.String(), nullable=True),
    sa.Column('create_date', sa.DateTime(), nullable=True),
    sa.Column('active', sa.Boolean(), nullable=True),
    sa.Column('ontology_code_id', sa.Integer(), nullable=True),
    sa.Column('input_type_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['input_type_id'], ['input_type.id'], ),
    sa.ForeignKeyConstraint(['ontology_code_id'], ['ontology_code.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('site_has_study',
    sa.Column('study_id', sa.Integer(), nullable=False),
    sa.Column('site_id', sa.Integer(), nullable=False),
    sa.Column('create_date', sa.DateTime(), nullable=True),
    sa.Column('active', sa.Boolean(), nullable=True),
    sa.ForeignKeyConstraint(['site_id'], ['site.id'], ),
    sa.ForeignKeyConstraint(['study_id'], ['study.id'], ),
    sa.PrimaryKeyConstraint('study_id', 'site_id')
    )
    op.create_table('study_links',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('study_id', sa.Integer(), nullable=True),
    sa.Column('name', sa.String(), nullable=True),
    sa.Column('href', sa.String(), nullable=True),
    sa.Column('active', sa.Boolean(), nullable=True),
    sa.ForeignKeyConstraint(['study_id'], ['study.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('study_version',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('study_id', sa.Integer(), nullable=True),
    sa.Column('create_date', sa.DateTime(), nullable=True),
    sa.Column('active', sa.Boolean(), nullable=True),
    sa.ForeignKeyConstraint(['study_id'], ['study.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('criterion_has_tag',
    sa.Column('criterion_id', sa.Integer(), nullable=False),
    sa.Column('tag_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['criterion_id'], ['criterion.id'], ),
    sa.ForeignKeyConstraint(['tag_id'], ['tag.id'], ),
    sa.PrimaryKeyConstraint('criterion_id', 'tag_id')
    )
    op.create_table('criterion_has_value',
    sa.Column('criterion_id', sa.Integer(), nullable=False),
    sa.Column('value_id', sa.Integer(), nullable=False),
    sa.Column('create_date', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['criterion_id'], ['criterion.id'], ),
    sa.ForeignKeyConstraint(['value_id'], ['value.id'], ),
    sa.PrimaryKeyConstraint('criterion_id', 'value_id')
    )
    op.create_table('display_rules',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('criterion_id', sa.Integer(), nullable=True),
    sa.Column('priority', sa.String(), nullable=True),
    sa.Column('active', sa.Boolean(), nullable=True),
    sa.Column('version', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['criterion_id'], ['criterion.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('eligibility_criteria',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('create_date', sa.DateTime(), nullable=True),
    sa.Column('active', sa.Boolean(), nullable=True),
    sa.Column('study_version_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['study_version_id'], ['study_version.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('study_algorithm_engine',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('study_version_id', sa.Integer(), nullable=True),
    sa.Column('start_date', sa.DateTime(), nullable=True),
    sa.Column('active', sa.Boolean(), nullable=True),
    sa.ForeignKeyConstraint(['study_version_id'], ['study_version.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('el_criteria_has_criterion',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('criterion_id', sa.Integer(), nullable=True),
    sa.Column('eligibility_criteria_id', sa.Integer(), nullable=True),
    sa.Column('create_date', sa.DateTime(), nullable=True),
    sa.Column('active', sa.Boolean(), nullable=True),
    sa.Column('value_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['criterion_id'], ['criterion.id'], ),
    sa.ForeignKeyConstraint(['eligibility_criteria_id'], ['eligibility_criteria.id'], ),
    sa.ForeignKeyConstraint(['value_id'], ['value.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('eligibility_criteria_has_note',
    sa.Column('eligibility_criteria_id', sa.Integer(), nullable=False),
    sa.Column('note_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['eligibility_criteria_id'], ['eligibility_criteria.id'], ),
    sa.ForeignKeyConstraint(['note_id'], ['note.id'], ),
    sa.PrimaryKeyConstraint('eligibility_criteria_id', 'note_id')
    )
    op.create_table('triggered_by',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('display_rules_id', sa.Integer(), nullable=True),
    sa.Column('criterion_id', sa.Integer(), nullable=True),
    sa.Column('value_id', sa.Integer(), nullable=True),
    sa.Column('path', sa.String(), nullable=True),
    sa.Column('active', sa.Boolean(), nullable=True),
    sa.ForeignKeyConstraint(['criterion_id'], ['criterion.id'], ),
    sa.ForeignKeyConstraint(['display_rules_id'], ['display_rules.id'], ),
    sa.ForeignKeyConstraint(['value_id'], ['value.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('algorithm_engine',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('study_algorithm_engine_id', sa.Integer(), nullable=True),
    sa.Column('el_criteria_has_criterion_id', sa.Integer(), nullable=True),
    sa.Column('path', sa.String(), nullable=True),
    sa.Column('sequence', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['el_criteria_has_criterion_id'], ['el_criteria_has_criterion.id'], ),
    sa.ForeignKeyConstraint(['study_algorithm_engine_id'], ['study_algorithm_engine.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('algorithm_engine')
    op.drop_table('triggered_by')
    op.drop_table('eligibility_criteria_has_note')
    op.drop_table('el_criteria_has_criterion')
    op.drop_table('study_algorithm_engine')
    op.drop_table('eligibility_criteria')
    op.drop_table('display_rules')
    op.drop_table('criterion_has_value')
    op.drop_table('criterion_has_tag')
    op.drop_table('study_version')
    op.drop_table('study_links')
    op.drop_table('site_has_study')
    op.drop_table('criterion')
    op.drop_table('value')
    op.drop_table('tag')
    op.drop_table('study')
    op.drop_table('site')
    op.drop_table('saved_input')
    op.drop_table('ontology_code')
    op.drop_table('note')
    op.drop_table('input_type')
    # ### end Alembic commands ###
