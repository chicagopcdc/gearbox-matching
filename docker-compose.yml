version: '3'
services:
  app:
    image: gearbox_be
    ports:
      - "8000:80"
    volumes:
      - .:/src
    depends_on:
      - db_migration
    environment:
      - DB_HOST=db
      - DB_USER=postgres
      - DB_PASSWORD=postgres
      - DB_PORT=5432
      - TESTING=True
      - BYPASS_FENCE_DUMMYER_USER_ID=4
      - S3_BUCKET_NAME="commons-gearbox-data-bucket-with-versioning"
      - S3_TEST_BUCKET_NAME="test-compose-gearbox-data-bucket-with-versioning"
      - S3_BUCKET_MATCH_CONDITIONS_KEY_NAME ="match_conditions.json"
      - S3_BUCKET_MATCH_FORM_KEY_NAME = "match_form.json"
      - S3_BUCKET_STUDIES_KEY_NAME = "gearbox_studies.json"
      - S3_BUCKET_ELIGIBILITY_CRITERIA_KEY_NAME = "eligibility_criteria.json"
      # TO DO: figure out how to inject these in docker, for now
      # hard code when testing on docker. These are used in the
      # boto manager to create the presiged urls.
      - S3_AWS_ACCESS_KEY_ID = "your access key id here"
      - S3_AWS_SECRET_ACCESS_KEY = "your secret access key here"
    command: /env/bin/uvicorn --host 0.0.0.0 --port 80 gearbox.asgi:app --reload
  db_migration:
    build: .
    image: gearbox_be
    volumes:
      - .:/src
    depends_on:
      - db
    environment:
      - DB_HOST=db
      - DB_USER=gearbox_user
    command: sh -c '
         /env/bin/alembic upgrade head
      '
  db:
    image: postgres
    environment:
      - POSTGRES_USER=gearbox_user
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_HOST_AUTH_METHOD=trust
    volumes:
      - ./postgres-data:/var/lib/postgresql/data
      - ./postgres-init:/docker-entrypoint-initdb.d:ro
    ports:
      - 5432:5432

  esproxy-service:
    image: docker.elastic.co/elasticsearch/elasticsearch-oss:6.8.12
    container_name: esproxy-service
    environment:
      - cluster.name=elasticsearch-cluster
      - bootstrap.memory_lock=false
      - "ES_JAVA_OPTS=-Xms1g -Xmx1g"
    entrypoint:
      - /bin/bash
    # mmapfs requires systemctl update - see https://www.elastic.co/guide/en/elasticsearch/reference/current/index-modules-store.html#mmapfs
    command:
      - -c
      - "echo -e 'cluster.name: docker-cluster\nhttp.host: 0.0.0.0\nindex.store.type: niofs' > /usr/share/elasticsearch/config/elasticsearch.yml && /usr/local/bin/docker-entrypoint.sh eswrapper"
    ulimits:
      memlock:
        soft: -1
        hard: -1
      nofile:
        soft: 65536
        hard: 65536
    ports:
      - 9200:9200
